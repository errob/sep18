//------------------------------------------------------------------------------
// Car.h
//
// Group: Group 18622, study assistant Roman Walch
//
// Authors: Christina Dionysio (01610877)
// Johannes Mayerhofer (11739820)
// Robert Ertl (01114419)
//------------------------------------------------------------------------------
//

#include "Car.h"

using Sep::Car;

//------------------------------------------------------------------------------
Car::Car() : away_(false), no_route_(false), updated_(false)
{
}

//------------------------------------------------------------------------------
Car::~Car()
{
}

//------------------------------------------------------------------------------
std::pair<int, int> Car::getPos()
{
  return pos_;
}

//------------------------------------------------------------------------------
void Car::setPos(std::pair<int, int> pos)
{
  pos_ = pos;
}

//------------------------------------------------------------------------------
bool Car::isAway()
{
  return away_;
}

//------------------------------------------------------------------------------
void Car::setAway(bool away)
{
  away_ = away;
}

//------------------------------------------------------------------------------
int Car::getTimeLeft()
{
  return time_left_;
}

//------------------------------------------------------------------------------
void Car::setTimeLeft(int timeLeft)
{
  time_left_ = timeLeft;
}

//------------------------------------------------------------------------------
std::pair<int, int> Car::getStart()
{
  return start_;
}

//------------------------------------------------------------------------------
void Car::setStart(std::pair<int, int> start)
{
  start_ = start;
}

//------------------------------------------------------------------------------
std::pair<int, int> Car::getGoal()
{
  return goal_;
}

//------------------------------------------------------------------------------
void Car::setGoal(std::pair<int, int> goal)
{
  goal_ = goal;
}

//------------------------------------------------------------------------------
std::vector<std::pair<int, int>> Car::getRoute()
{
  return route_;
}

//------------------------------------------------------------------------------
void Car::setRoute(std::vector<std::pair<int, int>> route)
{
  route_ = route;
}

//------------------------------------------------------------------------------
bool Car::isReturning()
{
  return returning_;
}

//------------------------------------------------------------------------------
void Car::setReturning(bool returning)
{
  returning_ = returning;
}

//------------------------------------------------------------------------------
std::pair<int, int> Car::getClinic()
{
  return clinic_;
}

//------------------------------------------------------------------------------
void Car::setClinic(std::pair<int, int> clinic)
{
  clinic_ = clinic;
}

//------------------------------------------------------------------------------
std::pair<int, int> Car::getHome()
{
  return home_;
}

//------------------------------------------------------------------------------
void Car::setHome(std::pair<int, int> home)
{
  home_ = home;
}

//------------------------------------------------------------------------------
bool Car::isNoRoute()
{
  return no_route_;
}

//------------------------------------------------------------------------------
void Car::setNoRoute(bool noRoute)
{
  no_route_ = noRoute;
}

//------------------------------------------------------------------------------
bool Car::isUpdated()
{
  return updated_;
}

//------------------------------------------------------------------------------
void Car::setUpdated(bool updated)
{
  updated_ = updated;
}